// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"pair/service/user/rpc/internal/logic"
	"pair/service/user/rpc/internal/svc"
	"pair/service/user/rpc/user/pb"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) UserAdd(ctx context.Context, in *pb.UserAddReq) (*pb.UserAddRsp, error) {
	l := logic.NewUserAddLogic(ctx, s.svcCtx)
	return l.UserAdd(in)
}

func (s *UserServer) UserUpdate(ctx context.Context, in *pb.UserUpdateReq) (*pb.Response, error) {
	l := logic.NewUserUpdateLogic(ctx, s.svcCtx)
	return l.UserUpdate(in)
}

func (s *UserServer) UserInfo(ctx context.Context, in *pb.UserInfoReq) (*pb.UserInfoRsp, error) {
	l := logic.NewUserInfoLogic(ctx, s.svcCtx)
	return l.UserInfo(in)
}

func (s *UserServer) UserList(ctx context.Context, in *pb.UserListReq) (*pb.UserListRsp, error) {
	l := logic.NewUserListLogic(ctx, s.svcCtx)
	return l.UserList(in)
}
