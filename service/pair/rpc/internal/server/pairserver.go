// Code generated by goctl. DO NOT EDIT!
// Source: pair.proto

package server

import (
	"context"

	"pair/service/pair/rpc/internal/logic"
	"pair/service/pair/rpc/internal/svc"
	"pair/service/pair/rpc/pair/pb"
)

type PairServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedPairServer
}

func NewPairServer(svcCtx *svc.ServiceContext) *PairServer {
	return &PairServer{
		svcCtx: svcCtx,
	}
}

func (s *PairServer) ElementSave(ctx context.Context, in *pb.EleSaveReq) (*pb.Response, error) {
	l := logic.NewElementSaveLogic(ctx, s.svcCtx)
	return l.ElementSave(in)
}

func (s *PairServer) ElementView(ctx context.Context, in *pb.EleViewReq) (*pb.EleViewRsp, error) {
	l := logic.NewElementViewLogic(ctx, s.svcCtx)
	return l.ElementView(in)
}

func (s *PairServer) ElementList(ctx context.Context, in *pb.EleListReq) (*pb.ELePairRsp, error) {
	l := logic.NewElementListLogic(ctx, s.svcCtx)
	return l.ElementList(in)
}

func (s *PairServer) ElementPair(ctx context.Context, in *pb.ElePairReq) (*pb.ELePairRsp, error) {
	l := logic.NewElementPairLogic(ctx, s.svcCtx)
	return l.ElementPair(in)
}
