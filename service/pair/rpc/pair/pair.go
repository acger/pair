// Code generated by goctl. DO NOT EDIT!
// Source: pair.proto

package pair

import (
	"context"

	"pair/service/pair/rpc/pair/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ELePairRsp  = pb.ELePairRsp
	EleListReq  = pb.EleListReq
	ElePairReq  = pb.ElePairReq
	EleSaveReq  = pb.EleSaveReq
	EleViewReq  = pb.EleViewReq
	EleViewRsp  = pb.EleViewRsp
	Element     = pb.Element
	Response    = pb.Response
	UserElement = pb.UserElement

	Pair interface {
		ElementSave(ctx context.Context, in *EleSaveReq, opts ...grpc.CallOption) (*Response, error)
		ElementView(ctx context.Context, in *EleViewReq, opts ...grpc.CallOption) (*EleViewRsp, error)
		ElementList(ctx context.Context, in *EleListReq, opts ...grpc.CallOption) (*ELePairRsp, error)
		ElementPair(ctx context.Context, in *ElePairReq, opts ...grpc.CallOption) (*ELePairRsp, error)
	}

	defaultPair struct {
		cli zrpc.Client
	}
)

func NewPair(cli zrpc.Client) Pair {
	return &defaultPair{
		cli: cli,
	}
}

func (m *defaultPair) ElementSave(ctx context.Context, in *EleSaveReq, opts ...grpc.CallOption) (*Response, error) {
	client := pb.NewPairClient(m.cli.Conn())
	return client.ElementSave(ctx, in, opts...)
}

func (m *defaultPair) ElementView(ctx context.Context, in *EleViewReq, opts ...grpc.CallOption) (*EleViewRsp, error) {
	client := pb.NewPairClient(m.cli.Conn())
	return client.ElementView(ctx, in, opts...)
}

func (m *defaultPair) ElementList(ctx context.Context, in *EleListReq, opts ...grpc.CallOption) (*ELePairRsp, error) {
	client := pb.NewPairClient(m.cli.Conn())
	return client.ElementList(ctx, in, opts...)
}

func (m *defaultPair) ElementPair(ctx context.Context, in *ElePairReq, opts ...grpc.CallOption) (*ELePairRsp, error) {
	client := pb.NewPairClient(m.cli.Conn())
	return client.ElementPair(ctx, in, opts...)
}
